////********** AUTOGENERATED FILE: DO NOT REMOVE ANY COMMENT IN THIS STYLE **********////
////********** START IMPORTS **********////
import 'package:injectable/injectable.dart';
import 'package:logger/logger.dart';
import '../../../../util/helpers/persistance/persistance_helper.dart';
import '../../domain/usecases/is_fresh.dart';
import 'onboard_local_datasource.dart';
import '../../domain/usecases/set_unfresh.dart';
////********** END IMPORTS **********////

@LazySingleton(as: OnboardLocalDataSource)
class OnboardLocalDataSourceImp implements OnboardLocalDataSource {
  final Logger _logger;
  final PersistanceHelper _persistanceHelper;

  final _kIsFresh = 'isFresh';

  OnboardLocalDataSourceImp({
    required Logger logger,
    required PersistanceHelper persistanceHelper,
  })  : _logger = logger,
        _persistanceHelper = persistanceHelper;

////********** START METHODS **********////
  @override
  Future<IsFreshUsecaseOutput> isFresh(IsFreshUsecaseInput input) async {
    final isFreshInstall = await _persistanceHelper.getBool(_kIsFresh);

    return IsFreshUsecaseOutput(isFreshInstall: isFreshInstall ?? true);
  }

  /// [SetUnfreshUsecaseInput] is received to [setUnfresh] method as parameter
  /// [SetUnfreshUsecaseOutput] is returned from [setUnfresh] method
  @override
  Future<SetUnfreshUsecaseOutput> setUnfresh(
      SetUnfreshUsecaseInput input) async {
    await _persistanceHelper.saveBool(_kIsFresh, false);

    return SetUnfreshUsecaseOutput();
  }

////********** END METHODS **********////
}
